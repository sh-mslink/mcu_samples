<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\sample10.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\sample10.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Wed Sep 23 15:55:05 2020
<BR><P>
<H3>Maximum Stack Usage =        284 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; fft_test &rArr; fft_arm_dsp &rArr; arm_cfft_f32 &rArr; arm_cfft_radix8by4_f32 &rArr; arm_radix8_butterfly_f32
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4e]">ACC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4e]">ACC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4e]">ACC_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[39]">ADC3_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from at32f4xx_it.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[4b]">CAN2_RX0_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[4c]">CAN2_RX1_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[4d]">CAN2_SCE_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[4a]">CAN2_TX_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[42]">DMA2_Channel1_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[43]">DMA2_Channel2_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[44]">DMA2_Channel3_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[45]">DMA2_Channel4_5_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[51]">DMA2_Channel6_7_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from at32f4xx_it.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[55]">ETH_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[56]">ETH_WKUP_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from at32f4xx_it.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[48]">I2C3_ER_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[47]">I2C3_EV_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from at32f4xx_it.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from at32f4xx_it.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from at32f4xx_it.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[3b]">SDIO1_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[46]">SDIO2_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[2e]">SPI2_I2S2EXT_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[3d]">SPI3_I2S3EXT_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[49]">SPI4_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from at32f4xx_it.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from at32f4xx_it.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[58]">SystemInit</a> from system_at32f4xx.o(.text) referenced from startup_at32f407vgt7.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[22]">TMR1_BRK_TMR9_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[25]">TMR1_CC_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[23]">TMR1_OV_TMR10_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[24]">TMR1_TRG_COM_TMR11_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[26]">TMR2_GLOBAL_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[27]">TMR3_GLOBAL_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[28]">TMR4_GLOBAL_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[3c]">TMR5_GLOBAL_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[40]">TMR6_GLOBAL_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[41]">TMR7_GLOBAL_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[35]">TMR8_BRK_TMR12_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[38]">TMR8_CC_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[36]">TMR8_OV_TMR13_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[37]">TMR8_TRG_COM_TMR14_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[53]">UART7_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[54]">UART8_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[52]">USART6_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[4f]">USB_HP_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[50]">USB_LP_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from at32f4xx_it.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[3a]">XMC_IRQHandler</a> from startup_at32f407vgt7.o(.text) referenced from startup_at32f407vgt7.o(RESET)
 <LI><a href="#[59]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_at32f407vgt7.o(.text)
 <LI><a href="#[5a]">fputc</a> from at32_board.o(.text) referenced from printfa.o(i.__0printf)
 <LI><a href="#[57]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[c1]"></a>arm_bitreversal_32</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, arm_bitreversal2.o(. text))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cfft_f32
</UL>

<P><STRONG><a name="[d9]"></a>arm_bitreversal_16</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, arm_bitreversal2.o(. text), UNUSED)

<P><STRONG><a name="[59]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(.text)
</UL>
<P><STRONG><a name="[da]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[5b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d1]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[db]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[dc]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[dd]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[de]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[df]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[5d]"></a>RCC_Configuration</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_Configuration
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADCCLKConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>GPIO_Configuration</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>MCO_Config</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MCO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_CLKOUTConfig
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>timer3Init</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer3Init
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseStructInit
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseInit
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SelectOutputTrigger
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>initADC</STRONG> (Thumb, 196 bytes, Stack size 72 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = initADC &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Reset
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DefaultInitParaConfig
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartCalibration
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RstCalibration
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetResetCalibrationStatus
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationStatus
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACtrl
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>letsGo</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = letsGo
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Cmd
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ChannelEnable
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>printADCRawData</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[57]"></a>main</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = main &rArr; fft_test &rArr; fft_arm_dsp &rArr; arm_cfft_f32 &rArr; arm_cfft_radix8by4_f32 &rArr; arm_radix8_butterfly_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_test
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ChannelEnable
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_LEDn_Toggle
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_Board_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;letsGo
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initADC
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer3Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCO_Config
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[5a]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, at32_board.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[86]"></a>AT32_BUTTON_Init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, at32_board.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = AT32_BUTTON_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_Board_Init
</UL>

<P><STRONG><a name="[8a]"></a>AT32_LEDn_OFF</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at32_board.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_Board_Init
</UL>

<P><STRONG><a name="[87]"></a>AT32_LEDn_Init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, at32_board.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = AT32_LEDn_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_Board_Init
</UL>

<P><STRONG><a name="[88]"></a>Delay_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, at32_board.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay_init
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_Board_Init
</UL>

<P><STRONG><a name="[7e]"></a>AT32_Board_Init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, at32_board.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AT32_Board_Init &rArr; AT32_LEDn_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_LEDn_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_LEDn_OFF
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_BUTTON_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>AT32_USB_GPIO_init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, at32_board.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>

<P><STRONG><a name="[8d]"></a>AT32_BUTTON_State</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, at32_board.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_BUTTON_Press
</UL>

<P><STRONG><a name="[90]"></a>Delay_ms</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, at32_board.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_sec
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_BUTTON_Press
</UL>

<P><STRONG><a name="[8f]"></a>AT32_BUTTON_Press</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, at32_board.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_BUTTON_State
</UL>

<P><STRONG><a name="[e0]"></a>AT32_LEDn_ON</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at32_board.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>AT32_LEDn_Toggle</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, at32_board.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>UART_Print_Init</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, at32_board.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = UART_Print_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_StructInit
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INTConfig
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e1]"></a>Delay_us</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, at32_board.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>Delay_sec</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, at32_board.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>

<P><STRONG><a name="[bc]"></a>enableSysTickInt</STRONG> (Thumb, 166 bytes, Stack size 12 bytes, at32_board.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = enableSysTickInt
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_test
</UL>

<P><STRONG><a name="[e2]"></a>getSysTick</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at32_board.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>stopSysTick</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, at32_board.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_test
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, at32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>DMA_Reset</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, at32f4xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initADC
</UL>

<P><STRONG><a name="[6e]"></a>DMA_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, at32f4xx_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initADC
</UL>

<P><STRONG><a name="[e3]"></a>DMA_Flexible_Config</STRONG> (Thumb, 198 bytes, Stack size 0 bytes, at32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>DMA_DefaultInitParaConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initADC
</UL>

<P><STRONG><a name="[79]"></a>DMA_ChannelEnable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;letsGo
</UL>

<P><STRONG><a name="[e4]"></a>DMA_INTConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[e5]"></a>DMA_SetCurrDataCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[e6]"></a>DMA_GetCurrDataCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, at32f4xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>DMA_ClearFlag</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f4xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e7]"></a>DMA_GetITStatus</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, at32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[e8]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>GPIO_Reset</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, at32f4xx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[98]"></a>GPIO_AFIOReset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, at32f4xx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[64]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, at32f4xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_USB_GPIO_init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_LEDn_Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_BUTTON_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCO_Config
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>

<P><STRONG><a name="[63]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f4xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_USB_GPIO_init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_LEDn_Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_BUTTON_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>

<P><STRONG><a name="[8e]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_BUTTON_State
</UL>

<P><STRONG><a name="[e9]"></a>GPIO_ReadInputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[ea]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[ec]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[8c]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_USB_GPIO_init
</UL>

<P><STRONG><a name="[ed]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>GPIO_PinsLockConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>GPIO_EventOutputConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>GPIO_EventOutputCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>GPIO_PinsRemapConfig</STRONG> (Thumb, 1352 bytes, Stack size 20 bytes, at32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f3]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, at32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>GPIO_ETH_MediaInterfaceConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f5]"></a>RCC_Reset</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>RCC_HSEConfig</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, at32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStable
</UL>

<P><STRONG><a name="[99]"></a>RCC_WaitForHSEStable</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, at32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSEENDelay
</UL>

<P><STRONG><a name="[f7]"></a>RCC_SetHSITweakValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f8]"></a>RCC_SetHSICalibValue</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f9]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[fa]"></a>RCC_PLLConfig</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[fb]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[fc]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[fd]"></a>RCC_GetSYSCLKSelction</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[fe]"></a>RCC_AHBCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ff]"></a>RCC_APB1CLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[100]"></a>RCC_APB2CLKConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[101]"></a>RCC_INTConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[102]"></a>RCC_USBCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[103]"></a>RCC_LSEConfig</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[104]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[105]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[106]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 300 bytes, Stack size 20 bytes, at32f4xx_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[5f]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[60]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_USB_GPIO_init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_LEDn_Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_BUTTON_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCO_Config
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[61]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[107]"></a>RCC_AHBPeriphResetCmd</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Reset
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Reset
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Reset
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AFIOReset
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Reset
</UL>

<P><STRONG><a name="[9d]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Reset
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Reset
</UL>

<P><STRONG><a name="[108]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[109]"></a>RCC_HSEClockFailureDetectorCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>RCC_CLKOUTConfig</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, at32f4xx_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_CLKOUTConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCO_Config
</UL>

<P><STRONG><a name="[10a]"></a>RCC_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[10b]"></a>RCC_GetINTStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[10c]"></a>RCC_ClearINTPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>RCC_StepModeCmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo240M
</UL>

<P><STRONG><a name="[10d]"></a>RCC_HSI2USB48M</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[10e]"></a>RCC_HSEDivConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>RCC_USBINTRemap</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[110]"></a>RCC_MCO2TMR10</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>TMR_Reset</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, at32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[69]"></a>TMR_TimeBaseInit</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer3Init
</UL>

<P><STRONG><a name="[111]"></a>TMR_SelectPlusMode</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[112]"></a>TMR_OC1Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>TMR_OC2Init</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[114]"></a>TMR_OC3Init</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[115]"></a>TMR_OC4Init</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>TMR_SetIC4DIV</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ICInit
</UL>

<P><STRONG><a name="[a4]"></a>TMR_SetIC3DIV</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ICInit
</UL>

<P><STRONG><a name="[a2]"></a>TMR_SetIC2DIV</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_PWMIConfig
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ICInit
</UL>

<P><STRONG><a name="[a0]"></a>TMR_SetIC1DIV</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_PWMIConfig
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ICInit
</UL>

<P><STRONG><a name="[9e]"></a>TMR_ICInit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, at32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetIC1DIV
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetIC2DIV
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetIC3DIV
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetIC4DIV
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI3_Config
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI4_Config
</UL>

<P><STRONG><a name="[a7]"></a>TMR_PWMIConfig</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, at32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetIC1DIV
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetIC2DIV
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[116]"></a>TMR_BRKDTConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>TMR_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer3Init
</UL>

<P><STRONG><a name="[117]"></a>TMR_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[118]"></a>TMR_ICStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>TMR_BRKDTStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[7a]"></a>TMR_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;letsGo
</UL>

<P><STRONG><a name="[11a]"></a>TMR_CtrlPWMOutputs</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[11b]"></a>TMR_INTConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[11c]"></a>TMR_GenerateEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[11d]"></a>TMR_DMAConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[11e]"></a>TMR_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[11f]"></a>TMR_InternalClockConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>TMR_SelectInputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TIxExternalClockConfig
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ITRxExternalClockConfig
</UL>

<P><STRONG><a name="[a8]"></a>TMR_ITRxExternalClockConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, at32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SelectInputTrigger
</UL>

<P><STRONG><a name="[aa]"></a>TMR_TIxExternalClockConfig</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, at32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SelectInputTrigger
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[ac]"></a>TMR_ETRConfig</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, at32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ETRClockMode2Config
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ETRClockMode1Config
</UL>

<P><STRONG><a name="[ab]"></a>TMR_ETRClockMode1Config</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, at32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ETRConfig
</UL>

<P><STRONG><a name="[ad]"></a>TMR_ETRClockMode2Config</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, at32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ETRConfig
</UL>

<P><STRONG><a name="[120]"></a>TMR_DIVConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[121]"></a>TMR_CounterModeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[122]"></a>TMR_EncoderInterfaceConfig</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[123]"></a>TMR_ForcedOC1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[124]"></a>TMR_ForcedOC2Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[125]"></a>TMR_ForcedOC3Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[126]"></a>TMR_ForcedOC4Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[127]"></a>TMR_ARPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[128]"></a>TMR_SelectHALL</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[129]"></a>TMR_SelectCCDMA</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>TMR_CCPreloadControl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[12b]"></a>TMR_OC1PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[12c]"></a>TMR_OC2PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[12d]"></a>TMR_OC3PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[12e]"></a>TMR_OC4PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[12f]"></a>TMR_OC1FastConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[130]"></a>TMR_OC2FastConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[131]"></a>TMR_OC3FastConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[132]"></a>TMR_OC4FastConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[133]"></a>TMR_ClearOC1Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[134]"></a>TMR_ClearOC2Ref</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[135]"></a>TMR_ClearOC3Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[136]"></a>TMR_ClearOC4Ref</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>TMR_OC1PolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[138]"></a>TMR_OC1NPolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[139]"></a>TMR_OC2PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[13a]"></a>TMR_OC2NPolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[13b]"></a>TMR_OC3PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[13c]"></a>TMR_OC3NPolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[13d]"></a>TMR_OC4PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[13e]"></a>TMR_CCxCmd</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[13f]"></a>TMR_CCxNCmd</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>TMR_SelectOCxM</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[141]"></a>TMR_UpdateDisableConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[142]"></a>TMR_UpdateRequestConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[143]"></a>TMR_SelectHallSensor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[144]"></a>TMR_SelectOnePulseMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>TMR_SelectOutputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer3Init
</UL>

<P><STRONG><a name="[145]"></a>TMR_SelectSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[146]"></a>TMR_SelectMasterSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>TMR_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[148]"></a>TMR_SetAutoreload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[149]"></a>TMR_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[14a]"></a>TMR_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[14b]"></a>TMR_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[14c]"></a>TMR_SetCompare4</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[14d]"></a>TMR_SetClockDivision</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[14e]"></a>TMR_GetCapture1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[14f]"></a>TMR_GetCapture2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[150]"></a>TMR_GetCapture3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[151]"></a>TMR_GetCapture4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[152]"></a>TMR_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[153]"></a>TMR_GetDIV</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[154]"></a>TMR_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[155]"></a>TMR_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[156]"></a>TMR_GetINTStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[157]"></a>TMR_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[158]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[159]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[15a]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[15b]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_init
</UL>

<P><STRONG><a name="[ae]"></a>USART_Reset</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, at32f4xx_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[92]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, at32f4xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
</UL>

<P><STRONG><a name="[91]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
</UL>

<P><STRONG><a name="[15c]"></a>USART_ClockInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[15d]"></a>USART_ClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
</UL>

<P><STRONG><a name="[93]"></a>USART_INTConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, at32f4xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_INTConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
</UL>

<P><STRONG><a name="[15e]"></a>USART_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[15f]"></a>USART_SetAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[160]"></a>USART_WakeUpConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[161]"></a>USART_ReceiverWakeUpCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[162]"></a>USART_LINBreakDetectLengthConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[163]"></a>USART_LINCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[164]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[165]"></a>USART_SendBreak</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[166]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[167]"></a>USART_SetPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[168]"></a>USART_SmartCardCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[169]"></a>USART_SmartCardNACKCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[16a]"></a>USART_HalfDuplexCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b]"></a>USART_OverSampling8Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[16c]"></a>USART_OneBitMethodCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[16d]"></a>USART_IrDAConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[16e]"></a>USART_IrDACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[16f]"></a>USART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[170]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[171]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, at32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>ADC_Reset</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, at32f4xx_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[70]"></a>ADC_Init</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, at32f4xx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initADC
</UL>

<P><STRONG><a name="[6f]"></a>ADC_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initADC
</UL>

<P><STRONG><a name="[73]"></a>ADC_Ctrl</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initADC
</UL>

<P><STRONG><a name="[72]"></a>ADC_DMACtrl</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initADC
</UL>

<P><STRONG><a name="[172]"></a>ADC_INTConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>ADC_RstCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initADC
</UL>

<P><STRONG><a name="[75]"></a>ADC_GetResetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initADC
</UL>

<P><STRONG><a name="[76]"></a>ADC_StartCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initADC
</UL>

<P><STRONG><a name="[77]"></a>ADC_GetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initADC
</UL>

<P><STRONG><a name="[7b]"></a>ADC_SoftwareStartConvCtrl</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;letsGo
</UL>

<P><STRONG><a name="[173]"></a>ADC_GetSoftwareStartConvStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[174]"></a>ADC_DiscModeChannelCountConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[175]"></a>ADC_DiscModeCtrl</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 184 bytes, Stack size 20 bytes, at32f4xx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initADC
</UL>

<P><STRONG><a name="[176]"></a>ADC_ExternalTrigConvCtrl</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[177]"></a>ADC_GetConversionValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[178]"></a>ADC_GetDualModeConversionValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[179]"></a>ADC_AutoInjectedConvCtrl</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[17a]"></a>ADC_InjectedDiscModeCtrl</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[17b]"></a>ADC_ExternalTrigInjectedConvConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[17c]"></a>ADC_ExternalTrigInjectedConvCtrl</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[17d]"></a>ADC_SoftwareStartInjectedConvCtrl</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[17e]"></a>ADC_GetSoftwareStartInjectedConvCtrlStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[17f]"></a>ADC_InjectedChannelConfig</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[180]"></a>ADC_InjectedSequencerLengthConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[181]"></a>ADC_SetInjectedOffset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[182]"></a>ADC_GetInjectedConversionValue</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[183]"></a>ADC_AnalogWDGCtrl</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[184]"></a>ADC_AnalogWDGThresholdsConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[185]"></a>ADC_AnalogWDGSingleChannelConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[186]"></a>ADC_TempSensorVrefintCtrl</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[187]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[188]"></a>ADC_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[189]"></a>ADC_GetINTStatus</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[18a]"></a>ADC_ClearINTPendingBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>SystemInit</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, system_at32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo240M
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(.text)
</UL>
<P><STRONG><a name="[18b]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, system_at32f4xx.o(.text), UNUSED)

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>ACC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>DMA2_Channel6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SDIO2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_I2S2EXT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_I2S3EXT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TMR1_BRK_TMR9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TMR1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TMR1_OV_TMR10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TMR1_TRG_COM_TMR11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TMR2_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TMR3_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TMR4_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TMR5_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TMR6_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TMR7_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TMR8_BRK_TMR12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TMR8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TMR8_OV_TMR13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TMR8_TRG_COM_TMR14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>USB_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>USB_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>XMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f407vgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f407vgt7.o(RESET)
</UL>
<P><STRONG><a name="[b4]"></a>check_result</STRONG> (Thumb, 102 bytes, Stack size 184 bytes, arm_fft_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = check_result &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_max_f32
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cmplx_mag_f32
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_test
</UL>

<P><STRONG><a name="[b9]"></a>printData</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, arm_fft_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = printData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_test
</UL>

<P><STRONG><a name="[ba]"></a>fft_arm_dsp</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, arm_fft_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = fft_arm_dsp &rArr; arm_cfft_f32 &rArr; arm_cfft_radix8by4_f32 &rArr; arm_radix8_butterfly_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cfft_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_test
</UL>

<P><STRONG><a name="[81]"></a>fft_test</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, arm_fft_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = fft_test &rArr; fft_arm_dsp &rArr; arm_cfft_f32 &rArr; arm_cfft_radix8by4_f32 &rArr; arm_radix8_butterfly_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopSysTick
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableSysTickInt
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_arm_dsp
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printData
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_result
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b6]"></a>arm_cmplx_mag_f32</STRONG> (Thumb, 246 bytes, Stack size 0 bytes, arm_cmplx_mag_f32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_result
</UL>

<P><STRONG><a name="[be]"></a>arm_cfft_radix8by2_f32</STRONG> (Thumb, 398 bytes, Stack size 32 bytes, arm_cfft_f32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = arm_cfft_radix8by2_f32 &rArr; arm_radix8_butterfly_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_radix8_butterfly_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cfft_f32
</UL>

<P><STRONG><a name="[c0]"></a>arm_cfft_radix8by4_f32</STRONG> (Thumb, 1098 bytes, Stack size 88 bytes, arm_cfft_f32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = arm_cfft_radix8by4_f32 &rArr; arm_radix8_butterfly_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_radix8_butterfly_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cfft_f32
</UL>

<P><STRONG><a name="[bb]"></a>arm_cfft_f32</STRONG> (Thumb, 330 bytes, Stack size 24 bytes, arm_cfft_f32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = arm_cfft_f32 &rArr; arm_cfft_radix8by4_f32 &rArr; arm_radix8_butterfly_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_radix8_butterfly_f32
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_bitreversal_32
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cfft_radix8by4_f32
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cfft_radix8by2_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_arm_dsp
</UL>

<P><STRONG><a name="[b7]"></a>arm_max_f32</STRONG> (Thumb, 216 bytes, Stack size 12 bytes, arm_max_f32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = arm_max_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_result
</UL>

<P><STRONG><a name="[bf]"></a>arm_radix8_butterfly_f32</STRONG> (Thumb, 1244 bytes, Stack size 124 bytes, arm_cfft_radix8_f32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = arm_radix8_butterfly_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cfft_radix8by4_f32
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cfft_radix8by2_f32
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cfft_f32
</UL>

<P><STRONG><a name="[c3]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[18c]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[18d]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_result
</UL>

<P><STRONG><a name="[18e]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[b8]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printData
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_result
</UL>

<P><STRONG><a name="[18f]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c5]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[190]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[cc]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[cd]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[ce]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[cf]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[d0]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[d5]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[191]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[192]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[c6]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[193]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[194]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[ca]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[d2]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[195]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[7d]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printADCRawData
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printData
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_result
</UL>

<P><STRONG><a name="[196]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[197]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[198]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[199]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[19a]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[9b]"></a>RCC_HSEENDelay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStable
</UL>

<P><STRONG><a name="[a5]"></a>TI4_Config</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, at32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ICInit
</UL>

<P><STRONG><a name="[a3]"></a>TI3_Config</STRONG> (Thumb, 156 bytes, Stack size 20 bytes, at32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ICInit
</UL>

<P><STRONG><a name="[a1]"></a>TI2_Config</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, at32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TIxExternalClockConfig
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_PWMIConfig
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ICInit
</UL>

<P><STRONG><a name="[9f]"></a>TI1_Config</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, at32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TIxExternalClockConfig
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_PWMIConfig
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ICInit
</UL>

<P><STRONG><a name="[b1]"></a>SetSysClockTo240M</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, system_at32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetSysClockTo240M
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_StepModeCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[b3]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_at32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetSysClock &rArr; SetSysClockTo240M
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo240M
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[d4]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d3]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[d7]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d6]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
